{% set name = "cuda-nvcc-split" %}
{% set version = "12.0.76" %}
{% set cuda_version = "12.0" %}

{% set ctk_targets = {
  "linux-64": "x86_64-linux",
  "linux-aarch64": "sbsa-linux",
  "linux-ppc64le": "ppc64le-linux",
} %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://developer.download.nvidia.com/compute/cuda/redist/cuda_nvcc/linux-x86_64/cuda_nvcc-linux-x86_64-{{ version }}-archive.tar.xz
    sha256: 160ca9f8828f53daa4b2066c5361aacb45fa2575885f70c223cda1d11df53d6f
    folder: targets/x86_64-linux
    patches:
      - nvcc.profile.patch

  - url: https://developer.download.nvidia.com/compute/cuda/redist/cuda_nvcc/linux-ppc64le/cuda_nvcc-linux-ppc64le-{{ version }}-archive.tar.xz
    sha256: dc5bd7eac57b32a9645c0c23c6a1ba8a9533e846eeec31414e1aa4230afee2f8
    folder: targets/ppc64le-linux
    patches:
      - nvcc.profile.patch

  - url: https://developer.download.nvidia.com/compute/cuda/redist/cuda_nvcc/linux-sbsa/cuda_nvcc-linux-sbsa-{{ version }}-archive.tar.xz
    sha256: 85c8c643ea2cfa398e1b5ffcd597f5bb3b738526c9e3fb8e39dd909c55345f36
    folder: targets/sbsa-linux
    patches:
      - nvcc.profile.patch

build:
  number: 3
  skip: true  # [osx or win]

outputs:
  - name: cuda-nvcc
    files:
      - bin                                               # [linux]
      - lib/libnvptxcompiler_static.a                     # [linux]
      - nvvm                                              # [linux]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - arm-variant * {{ arm_variant_type }}        # [aarch64]
        - sysroot_{{ target_platform }} 2.17          # [linux]
      host:
        - cuda-version {{ cuda_version }}
        - cuda-cudart-dev
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - binutils               # [linux]
        - gcc                    # [linux]
        - gxx                    # [linux]
        - {{ pin_subpackage("cuda-nvcc_" + target_platform, exact=True) }}
        - cuda-cudart-dev
      run_constrained:
        - gcc_impl_{{ target_platform }} >=6,<13  # [linux]
        - arm-variant * {{ arm_variant_type }}    # [aarch64]
    test:
      requires:
        - cmake
        - ninja
      files:
        - test.cu
        - CMakeLists.txt
      commands:
        - nvcc --version
        - nvcc --verbose test.cu
        - cmake -S . -B ./build -G=Ninja && cmake --build ./build -v
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file:
        - {{ PREFIX }}/targets/{{ ctk_targets[target_platform] }}/LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: Compiler for CUDA applications.
      description: |
        Compiler for CUDA applications.
      doc_url: https://docs.nvidia.com/cuda/index.html

  {% for cross_target_platform in [
      "linux-64", "linux-aarch64", "linux-ppc64le"
  ] %}
  - name: cuda-nvcc_{{ cross_target_platform }}
    build:
      run_exports:
        strong:
          - cuda-version >={{ cuda_version }},<{{ cuda_version.split(".")[0]|int + 1 }}
    files:
      - etc/conda/activate.d/~cuda-nvcc_activate.sh      # [linux]
      - etc/conda/deactivate.d/~cuda-nvcc_deactivate.sh  # [linux]
    requirements:
      run:
        - {{ pin_subpackage("cuda-nvcc-impl_" + cross_target_platform, exact=True) }}
        - {{ pin_subpackage("cuda-nvcc-impl_" + target_platform, exact=True) }}
    test:
      commands:
        - test -f $PREFIX/etc/conda/activate.d/~cuda-nvcc_activate.sh      # [linux]
        - test -f $PREFIX/etc/conda/deactivate.d/~cuda-nvcc_deactivate.sh  # [linux]
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file:
        - {{ PREFIX }}/targets/{{ ctk_targets[cross_target_platform] }}/LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: Compiler for CUDA applications.
      description: |
        Compiler for CUDA applications.
      doc_url: https://docs.nvidia.com/cuda/index.html
  {% endfor %}

  {% for impl_cross_target_platform in [
      "linux-64", "linux-aarch64", "linux-ppc64le"
  ] %}
  - name: cuda-nvcc-impl_{{ impl_cross_target_platform }}
    build:
      run_exports:
        strong:
          - cuda-version >={{ cuda_version }},<{{ cuda_version.split(".")[0]|int + 1 }}
    files:
      - targets/{{ ctk_targets[impl_cross_target_platform] }}/bin      # [linux]
      - targets/{{ ctk_targets[impl_cross_target_platform] }}/nvvm     # [linux]
      - targets/{{ ctk_targets[impl_cross_target_platform] }}/include  # [linux]
      - targets/{{ ctk_targets[impl_cross_target_platform] }}/lib      # [linux]
      - Library\bin      # [win]
      - Library\nvvm     # [win]
      - Library\include  # [win]
      - Library\lib      # [win]
    requirements:
      build:
        - {{ c_compiler }}_{{ impl_cross_target_platform }}
        - {{ cxx_compiler }}_{{ impl_cross_target_platform }}
        - arm-variant * {{ arm_variant_type }}            # [impl_cross_target_platform == "linux-aarch64"]
        - sysroot_{{ impl_cross_target_platform }} 2.17        # [linux]
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
      run_constrained:
        - gcc_impl_{{ impl_cross_target_platform }} >=6,<13  # [linux]
        - arm-variant * {{ arm_variant_type }}          # [aarch64]
    test:
      commands:
        - test -f $PREFIX/targets/{{ ctk_targets[impl_cross_target_platform] }}/bin/nvcc                          # [linux]
        - test -d $PREFIX/targets/{{ ctk_targets[impl_cross_target_platform] }}/nvvm                              # [linux]
        - test -f $PREFIX/targets/{{ ctk_targets[impl_cross_target_platform] }}/lib/libnvptxcompiler_static.a     # [linux]
        - test -f $PREFIX/targets/{{ ctk_targets[impl_cross_target_platform] }}/include/nvPTXCompiler.h           # [linux]
        - test ! -f $PREFIX/etc/conda/activate.d/~cuda-nvcc_activate.sh               # [linux]
        - test ! -f $PREFIX/etc/conda/deactivate.d/~cuda-nvcc_deactivate.sh           # [linux]
        - if not exist %LIBRARY_LIB%\nvptxcompiler_static.lib exit 1  # [win]
        - if not exist %LIBRARY_INC%\nvPTXCompiler.h exit 1           # [win]
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file:
        - {{ PREFIX }}/targets/{{ ctk_targets[impl_cross_target_platform] }}/LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: Compiler for CUDA applications.
      description: |
        Compiler for CUDA applications.
      doc_url: https://docs.nvidia.com/cuda/index.html
  {% endfor %}

about:
  home: https://developer.nvidia.com/cuda-toolkit
  license_file:
    - {{ PREFIX }}/targets/{{ ctk_targets[target_platform] }}/LICENSE
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: Compiler for CUDA applications.
  description: |
    Compiler for CUDA applications.
  doc_url: https://docs.nvidia.com/cuda/index.html

extra:
  feedstock-name: cuda-nvcc
  recipe-maintainers:
    - adibbley
